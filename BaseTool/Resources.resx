<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccordionItem_InvalidWriteToContentTargetSize" xml:space="preserve">
    <value>ContentTargetSize is a read-only value and is set through Accordion.</value>
  </data>
  <data name="AccordionItem_InvalidWriteToExpandDirection" xml:space="preserve">
    <value>ExpandDirection is a read-only value and is set through Accordion.</value>
  </data>
  <data name="AccordionItem_OnIsSelectedPropertyChanged_InvalidChange" xml:space="preserve">
    <value>Cannot modify the IsSelected property while item is locked.</value>
  </data>
  <data name="AccordionItem_StartAction_InvalidAction" xml:space="preserve">
    <value>Invalid Action '{0}'.</value>
  </data>
  <data name="AccordionItem_StartAction_InvalidCall" xml:space="preserve">
    <value>Cannot start an action when there is no action scheduled.</value>
  </data>
  <data name="Accordion_InvalidManipulationOfSelectionCollections" xml:space="preserve">
    <value>The modification made to the collection lead to an invalid Selection state. Please check the SelectionMode to allow zero or multiple items.</value>
  </data>
  <data name="Accordion_OnActionFinish_InvalidFinish" xml:space="preserve">
    <value>Should not signal a finish when item is not expected to perform an action.</value>
  </data>
  <data name="Accordion_OnExpandDirectionPropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid ExpandDirection value '{0}'.</value>
  </data>
  <data name="Accordion_OnSelectedIndicesChanged_InvalidWrite" xml:space="preserve">
    <value>Cannot set read-only property SelectedIndices.</value>
  </data>
  <data name="Accordion_OnSelectedItemsChanged_InvalidWrite" xml:space="preserve">
    <value>Cannot set read-only property SelectedItems.</value>
  </data>
  <data name="Accordion_OnSelectionModePropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid SelectionMode value '{0}'.</value>
  </data>
  <data name="Accordion_OnSelectionSequencepropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid SelectionSequence value '{0}'.</value>
  </data>
  <data name="Accordion_UnsupportedCollectionAction" xml:space="preserve">
    <value>Unsupported collection action '{0}'.</value>
  </data>
  <data name="Automation_OperationCannotBePerformed" xml:space="preserve">
    <value>Cannot perform operation.</value>
  </data>
  <data name="CalendarAutomationPeer_BlackoutDayHelpText" xml:space="preserve">
    <value>Blackout Day - {0}</value>
  </data>
  <data name="CalendarAutomationPeer_CalendarButtonLocalizedControlType" xml:space="preserve">
    <value>calendar button</value>
  </data>
  <data name="CalendarAutomationPeer_DayButtonLocalizedControlType" xml:space="preserve">
    <value>day button</value>
  </data>
  <data name="CalendarAutomationPeer_DecadeMode" xml:space="preserve">
    <value>Decade</value>
  </data>
  <data name="CalendarAutomationPeer_MonthMode" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="CalendarAutomationPeer_YearMode" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="CalendarCollection_MultiThreadedCollectionChangeNotSupported" xml:space="preserve">
    <value>This type of Collection does not support changes to its SourceCollection from a thread different from the Dispatcher thread.</value>
  </data>
  <data name="Calendar_CheckSelectionMode_InvalidOperation" xml:space="preserve">
    <value>The SelectedDates collection can be changed only in a multiple selection mode. Use the SelectedDate in a single selection mode.</value>
  </data>
  <data name="Calendar_NextButtonName" xml:space="preserve">
    <value>next button</value>
  </data>
  <data name="Calendar_OnDisplayModePropertyChanged_InvalidValue" xml:space="preserve">
    <value>DisplayMode value is not valid.</value>
  </data>
  <data name="Calendar_OnFirstDayOfWeekChanged_InvalidValue" xml:space="preserve">
    <value>FirstDayOfWeek value is not valid.</value>
  </data>
  <data name="Calendar_OnSelectedDateChanged_InvalidOperation" xml:space="preserve">
    <value>The SelectedDate property cannot be set when the selection mode is None.</value>
  </data>
  <data name="Calendar_OnSelectedDateChanged_InvalidValue" xml:space="preserve">
    <value>SelectedDate value is not valid.</value>
  </data>
  <data name="Calendar_OnSelectionModeChanged_InvalidValue" xml:space="preserve">
    <value>SelectionMode value is not valid.</value>
  </data>
  <data name="Calendar_PreviousButtonName" xml:space="preserve">
    <value>previous button</value>
  </data>
  <data name="Calendar_UnSelectableDates" xml:space="preserve">
    <value>Value is not valid.</value>
  </data>
  <data name="DatePickerAutomationPeer_LocalizedControlType" xml:space="preserve">
    <value>date picker</value>
  </data>
  <data name="DatePickerDateValidationErrorEventArgs_ThrowException_NoException" xml:space="preserve">
    <value>Cannot Throw Null Exception</value>
  </data>
  <data name="DatePickerTextBox_DefaultWatermarkText" xml:space="preserve">
    <value>&lt;enter text here&gt;</value>
  </data>
  <data name="DatePickerTextBox_TemplatePartIsOfIncorrectType" xml:space="preserve">
    <value>The template part {0} is not an instance of {1}.</value>
  </data>
  <data name="DatePicker_DropDownButtonName" xml:space="preserve">
    <value>Show Calendar</value>
  </data>
  <data name="DatePicker_OnSelectedDateFormatChanged_InvalidValue" xml:space="preserve">
    <value>DatePickerFormat value is not valid.</value>
  </data>
  <data name="DatePicker_WatermarkText" xml:space="preserve">
    <value>&lt;{0}&gt;</value>
  </data>
  <data name="DateTimeTypeConverter_FormatException" xml:space="preserve">
    <value>DateTime value is in the wrong format.</value>
  </data>
  <data name="Expander_OnExpandDirectionPropertyChanged_InvalidValue" xml:space="preserve">
    <value>Invalid ExpandDirection value '{0}'.</value>
  </data>
  <data name="TransitioningContentControl_TransitionNotFound" xml:space="preserve">
    <value>Transition '{0}' was not defined.</value>
  </data>
  <data name="TransitiotioningContentControl_IsTransitioningReadOnly" xml:space="preserve">
    <value>IsTransitioning property is read-only.</value>
  </data>
</root>